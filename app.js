import{configDotenv}from"dotenv";import{v4 as uuidv4}from"uuid";import puppeteer from"puppeteer-core";import fs from"fs";import path from"path";import{fileURLToPath}from"url";const __filename=fileURLToPath(import.meta.url),__dirname=path.dirname(__filename);configDotenv();function sanitizeFilename(a){return a.replace(/[:*?"<>|/\\]/g,"_").substring(0,155)}const PARAMS="offset",NUM_INC=20,MAX=79;(async()=>{const a=await puppeteer.launch({executablePath:process.env.EXECUTABLE_PATH}),b=await a.newPage();await b.setViewport({width:1080,height:1024});for(let c=0;c<MAX;c++){await new Promise(a=>setTimeout(a,1e3)),await b.goto(process.env.URL_PAGE+`handle/HUST/23`+`?${PARAMS}=${(c+1)*NUM_INC}`,{waitUntil:"domcontentloaded",timeout:0});const d=await b.$$eval("tr.ikr-browse-item",a=>a.map(a=>{const b=a.innerText,c=Array.from(a.querySelectorAll("a")).map(a=>({href:a.href,text:a.innerText}));return{rowText:b,links:c}}));for(const c of d){const d=c.rowText.split("\n").filter(a=>a!==/\n/),e=`./newCrawl/${sanitizeFilename(d[2])}${uuidv4()}`;fs.mkdirSync(e),console.log(c.links),await b.goto(c.links[1].href,{timeout:0,waitUntil:"domcontentloaded"});const f=await b.$$eval("a.viewonline",a=>a.map(a=>a.href));if(0===f.length){console.log("No online content found"),fs.rmdirSync(e),await b.close();continue}const g=f.map(a=>a.replace("type=6","type=7"));console.log("Modified URLs:",g);for(const c of g)try{await b.goto(c,{waitUntil:"domcontentloaded",timeout:0});const d=await b.evaluate(()=>{const a=document.querySelector("frame");return a?a.src:null});if(!d)throw new Error("No frame URL found.");const f=new URL(d,b.url()).href,g=await a.newPage();await g.goto(f,{waitUntil:"domcontentloaded",timeout:0});const h=await g.content(),i=path.resolve(__dirname,e+`/${uuidv4()}frame-content.html`);fs.writeFileSync(i,h,"utf-8"),console.log(`Saved frame content to ${e+i}`);const j=path.resolve(__dirname,e+`/${uuidv4()}frame-screenshot.png`);await g.screenshot({path:j,fullPage:!0}),console.log(`Saved screenshot to ${e+j}`),await g.close()}catch(a){console.error(`Failed to load ${c}:`,a)}}}await a.close()})();